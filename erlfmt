#! /bin/sh -e
# Run erl_tidy on stdin and send result to stdout.

#
#   OSX and GNU/Linux mktemp behave differently with the -t option.
#
#       mktemp -t mkb
#           OSX      : /var/folders/cy/4988f14n4r35fp39wrt1pfq80000gn/T/mkb.UgVBxAPP
#           GNU/Linux: mktemp: too few X's in template ‘mkb’
#
#       mktemp -t mkb.XXXXXX
#           OSX      : /var/folders/cy/4988f14n4r35fp39wrt1pfq80000gn/T/mkb.XXXXXX.UgVBxAPP
#           GNU/Linux: /tmp/mkb.pRykUg
#
#   So, "manually" add the TMPDIR prefix.

D=${TMP1DIR:-.}
TMPF=$D/$(mktemp $(basename $0).XXXXXX)

cat - > $TMPF

#
#   Convert the tabs output by erl_prettypr to eight spaces.
#
#   On OSX, I was getting the error
#
#           sed: RE error: illegal byte sequence
#
#   Per StackOverflow, this error means that the byte-sequence in the file does
#   not use the same encoding as the shell.  In my specific case, I had some
#   eunit test cases that included text with some encoded characters.
#
#   The fix of setting LC_ALL=C in-line is fine since the only character we care
#   about matching is the tab character.
#
#       However, (effectively) setting LC_CTYPE to C treats strings as if each
#       byte were its own character (no interpretation based on encoding rules
#       is performed), with no regard for the - multibyte-on-demand - UTF-8
#       encoding that OS X employs by default, where foreign characters have
#       multibyte encodings.
#
#   http://stackoverflow.com/questions/19242275/re-error-illegal-byte-sequence-on-mac-os-x
#

erlfmt.escript "$TMPF" | LC_ALL=C sed 's/	/        /g'
rm $TMPF
